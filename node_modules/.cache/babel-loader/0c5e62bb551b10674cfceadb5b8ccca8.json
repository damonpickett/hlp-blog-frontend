{"ast":null,"code":"var _jsxFileName = \"/Users/damonpickett/Desktop/seir/unit4/project-4/hlp-blog-frontend/hlp-blog/src/components/BlogList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Blog from './Blog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogList = props => {\n  _s();\n\n  const [blogList, setBlogList] = useState([]); // const [blogID, setBlogID] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/blog_posts/`);\n        setBlogList(res.data);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const getBlogContent = async id => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/blog_posts/${id}`);\n      props.setTitle(res.data.title);\n      props.setContent(res.data.content);\n    } catch (err) {}\n  };\n\n  let listHTML = blogList.map(listItem => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [listItem.title, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          getBlogContent(listItem.id);\n        },\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 52\n      }, this)]\n    }, listItem.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  });\n  return props.title && props.content ? /*#__PURE__*/_jsxDEV(Blog, {\n    title: props.title,\n    setTitle: props.setTitle,\n    content: props.content,\n    setContent: props.setContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), listHTML]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BlogList, \"7YugXwuqhQVKWrDGTgVVhtTNoDc=\");\n\n_c = BlogList;\nexport default BlogList; // Second goal: have api call return anything from backend\n//     ? useEffect, axios, async/away ?\n// Third goal: api call returns title and created date from backend for all entries\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"sources":["/Users/damonpickett/Desktop/seir/unit4/project-4/hlp-blog-frontend/hlp-blog/src/components/BlogList.js"],"names":["axios","React","useState","useEffect","Blog","BlogList","props","blogList","setBlogList","fetchData","res","get","process","env","REACT_APP_API_URL","data","err","getBlogContent","id","setTitle","title","setContent","content","listHTML","map","listItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CADwB,CAExB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,cAA3C,CAAlB;AACAN,QAAAA,WAAW,CAACE,GAAG,CAACK,IAAL,CAAX;AACH,OAHD,CAIA,OAAOC,GAAP,EAAY,CAEX;AACJ,KARD;;AASAP,IAAAA,SAAS;AACZ,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMQ,cAAc,GAAG,MAAOC,EAAP,IAAc;AACjC,QAAI;AACA,YAAMR,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,eAAcI,EAAG,EAA5D,CAAlB;AACAZ,MAAAA,KAAK,CAACa,QAAN,CAAeT,GAAG,CAACK,IAAJ,CAASK,KAAxB;AACAd,MAAAA,KAAK,CAACe,UAAN,CAAiBX,GAAG,CAACK,IAAJ,CAASO,OAA1B;AACH,KAJD,CAKA,OAAON,GAAP,EAAY,CAEX;AACJ,GATD;;AAWA,MAAIO,QAAQ,GAAGhB,QAAQ,CAACiB,GAAT,CAAcC,QAAD,IAAc;AACtC,wBACI;AAAA,iBAAuBA,QAAQ,CAACL,KAAhC,oBAAuC;AAC/B,QAAA,OAAO,EAAE,MAAM;AACXH,UAAAA,cAAc,CAACQ,QAAQ,CAACP,EAAV,CAAd;AACH,SAH8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvC;AAAA,OAASO,QAAQ,CAACP,EAAlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GATc,CAAf;AAWA,SAAOZ,KAAK,CAACc,KAAN,IAAed,KAAK,CAACgB,OAArB,gBACH,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,KAAK,CAACc,KAAnB;AAA0B,IAAA,QAAQ,EAAEd,KAAK,CAACa,QAA1C;AAAoD,IAAA,OAAO,EAAEb,KAAK,CAACgB,OAAnE;AAA4E,IAAA,UAAU,EAAEhB,KAAK,CAACe;AAA9F;AAAA;AAAA;AAAA;AAAA,UADG,gBAGH;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAQH,CA/CD;;GAAMlB,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf,C,CAEA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Blog from './Blog';\n\nconst BlogList = (props) => {\n    const [blogList, setBlogList] = useState([]);\n    // const [blogID, setBlogID] = useState();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/blog_posts/`)\n                setBlogList(res.data)\n            }\n            catch (err) {\n\n            }\n        }\n        fetchData();\n    }, [])\n\n    const getBlogContent = async (id) => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/blog_posts/${id}`)\n            props.setTitle(res.data.title)\n            props.setContent(res.data.content)\n        }\n        catch (err) {\n            \n        }\n    }\n\n    let listHTML = blogList.map((listItem) => {\n        return (\n            <li key={listItem.id}>{listItem.title} <button\n                    onClick={() => {\n                        getBlogContent(listItem.id)\n                    }}>Read\n                </button>\n            </li>\n        )\n    })\n    \n    return props.title && props.content ? (\n        <Blog title={props.title} setTitle={props.setTitle} content={props.content} setContent={props.setContent}/>\n        ) : (\n        <div>\n            <h3>Blog Posts</h3>\n            {listHTML}\n        </div>\n    )\n};\n\nexport default BlogList;\n\n// Second goal: have api call return anything from backend\n//     ? useEffect, axios, async/away ?\n// Third goal: api call returns title and created date from backend for all entries\n\n"]},"metadata":{},"sourceType":"module"}